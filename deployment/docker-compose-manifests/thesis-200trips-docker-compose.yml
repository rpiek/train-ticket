version: '3.9'
services:

  # Used version 2.24.2
  zipkin:
    image: openzipkin/zipkin:2.24.2
    ports:
      - "9411:9411"
    environment:
      #      - STORAGE_TYPE=elasticsearch
      #      - ES_HOSTS=http://elasticsearch:9200
      - JAVA_OPTS=-Xmx8g
    #    volumes:
    #      - ./logs:/var/log/zipkin
    networks:
      - my-network

  #  kibana:
  #    image: docker.elastic.co/kibana/kibana:6.7.0
  #    container_name: kibana
  #    environment:
  #      - ELASTICSEARCH_URL=http://elasticsearch:9200
  #    ports:
  #      - "5601:5601"
  #    networks:
  #      - my-network
  #
  #  elasticsearch:
  #    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0
  #    container_name: elasticsearch
  #    environment:
  #      - discovery.type=single-node
  #      - ES_JAVA_OPTS=-Xms512m -Xmx8g
  #    networks:
  #      - my-network

  ts-route-service:
    image: thesis/ts-route-service:0.2.0
    #cpus: 0.25
    restart: "no"
    ports:
      - 11178:11178
    networks:
      - my-network
    depends_on:
      - ts-route-mysql

  ts-route-plan-service:
    image: thesis/ts-route-plan-service:0.2.0
    #cpus: 0.25
    restart: "no"
    ports:
      - 14578:14578
    networks:
      - my-network

  ts-route-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-route-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3307:3306'
    volumes:
      - ./sql-scripts/route/route_200.sql:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-security-service:
    image: thesis/ts-security-service:0.2.0
    restart: always
    ports:
      - 11188:11188
    networks:
      - my-network

  ts-security-mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'ts-security-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3313:3306'
    networks:
      - my-network

  ts-user-service:
    image: thesis/ts-user-service:0.2.0
    restart: always
    ports:
      - 12342:12342
    networks:
      - my-network

  ts-user-mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'ts-user-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3314:3306'
    volumes:
      - ./sql-scripts/user/user_200.sql:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-contacts-service:
    image: thesis/ts-contacts-service:0.2.0
    restart: always
    ports:
      - 12347:12347
    networks:
      - my-network

  ts-contacts-mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'ts-contacts-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3301:3306'
    volumes:
      - ./sql-scripts/contacts:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-preserve-service:
    build: ts-preserve-service
    #cpus: 0.25
    image: thesis/ts-preserve-service:0.2.0
    restart: no
    ports:
      - 14568:14568
    networks:
      - my-network

  ts-food-service:
    build: ts-food-service
    #cpus: 0.25
    image: thesis/ts-food-service:0.2.0
    restart: no
    ports:
      - 18856:18856
    networks:
      - my-network
    depends_on:
      - ts-food-mysql

  ts-food-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-food-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3298:3306'
    networks:
      - my-network

  ts-station-service:
    image: thesis/ts-station-service:0.2.0
    #cpus: 0.25
    restart: "no"
    ports:
      - 12345:12345
    networks:
      - my-network
    depends_on:
      - ts-station-mysql

  ts-station-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-station-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3308:3306'
    volumes:
      - ./sql-scripts/station/station_200.sql:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-travel-service:
    image: thesis/ts-travel-service:0.2.0
    #cpus: 0.25
    restart: "no"
    ports:
      - 12346:12346
    networks:
      - my-network
    depends_on:
      - ts-travel-mysql

  ts-travel-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-travel-mysql'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    volumes:
      - ./sql-scripts/trip/trip_200.sql:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-basic-service:
    image: thesis/ts-basic-service:0.2.0
    #cpus: 0.25
    restart: "no"
    ports:
      - 15680:15680
    networks:
      - my-network

  ts-seat-service:
    image: thesis/ts-seat-service:0.2.0
    #cpus: 0.25
    restart: no
    ports:
      - 18898:18898
    networks:
      - my-network

  ts-config-service:
    image: thesis/ts-config-service:0.2.0
    #cpus: 0.25
    restart: no
    ports:
      - 15679:15679
    networks:
      - my-network
    depends_on:
      - ts-config-mysql

  ts-config-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-config-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3309:3306'
    networks:
      - my-network

  ts-train-service:
    image: thesis/ts-train-service:0.2.0
    #cpus: 0.25
    restart: no
    ports:
      - 14567:14567
    networks:
      - my-network
    depends_on:
      - ts-train-mysql

  ts-train-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-train-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3310:3306'
    volumes:
      - ./sql-scripts/train_type/train_type_200.sql:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-price-service:
    build: ts-price-service
    #cpus: 0.25
    image: thesis/ts-price-service:0.2.0
    restart: no
    ports:
      - 16579:16579
    networks:
      - my-network
    depends_on:
      - ts-price-mysql

  ts-price-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-price-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3311:3306'
    volumes:
      - ./sql-scripts/price_config/price_config_200.sql:/docker-entrypoint-initdb.d
    networks:
      - my-network

  ts-order-service:
    image: thesis/ts-order-service:0.2.0
    #cpus: 0.25
    restart: no
    ports:
      - 12031:12031
    networks:
      - my-network
    depends_on:
      - ts-order-mysql

  ts-order-mysql:
    image: mysql:8.0
    #cpus: 0.25
    environment:
      MYSQL_DATABASE: 'ts-order-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3312:3306'
    networks:
      - my-network

  ts-consign-service:
    image: thesis/ts-consign-service:0.2.0
    restart: no
    ports:
      - 16111:16111
    networks:
      - my-network
    depends_on:
      - ts-consign-mysql

  ts-consign-mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'ts-consign-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3320:3306'
    networks:
      - my-network

  ts-consign-price-service:
    image: thesis/ts-consign-price-service:0.2.0
    restart: no
    ports:
      - 16110:16110
    networks:
      - my-network
    depends_on:
      - ts-consign-price-mysql

  ts-consign-price-mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'ts-consign-price-mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3321:3306'
    networks:
      - my-network

  # Used version 2.46
  prometheus:
    image: prom/prometheus:v2.46.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - my-network

  # Used version 10.0.2
  grafana:
    image: grafana/grafana:10.0.2
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Editor
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/
    networks:
      - my-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - my-network
    command: ["--docker_only"]

networks:
  my-network:
    # driver: overlay
    driver: bridge
